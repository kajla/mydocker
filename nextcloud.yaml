version: 2
services:
  app:
    image: nextcloud:fpm-alpine
    restart: unless-stopped
    volumes:
      - /srv/data/nextcloud:/var/www/html
    environment:
      - MYSQL_HOST=mysql
      - REDIS_HOST=redis
      - MYSQL_PASSWORD=${PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - OVERWRITEPROTOCOL=https
      - NEXTCLOUD_TRUSTED_DOMAINS=${HOST}
    networks:
      - backend

  web:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - /srv/data/nextcloud:/var/www/html:ro
      - /opt/docker/nextcloud/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud-http.entrypoints=web"
      - "traefik.http.routers.nextcloud-http.rule=Host(`${HOST}`)"
      - "traefik.http.routers.nextcloud.rule=Host(`${HOST}`)"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.middlewares.nextcloud-caldav.redirectregex.permanent=true"
      - "traefik.http.middlewares.nextcloud-caldav.redirectregex.regex=^https://(.*)/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.nextcloud-caldav.redirectregex.replacement=https://${1}/remote.php/dav/"
      - "traefik.http.middlewares.nextcloud-https.redirectscheme.scheme=https"
      - "traefik.http.routers.nextcloud-http.middlewares=nextcloud-https@docker"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-caldav@docker"
      - "traefik.http.routers.nextcloud.tls.certresolver=myresolver"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      - "traefik.protocol=h2c"

  cron:
    image: nextcloud:fpm-alpine
    restart: unless-stopped
    volumes:
      - /srv/data/nextcloud:/var/www/html
    entrypoint: /cron.sh
    networks:
      - backend

networks:
  backend:
    external:
      name: backend
